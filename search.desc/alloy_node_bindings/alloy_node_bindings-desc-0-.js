searchState.loadedDescShard("alloy_node_bindings", 0, "alloy-node-bindings\nThe default max priority fee per gas, used in case the …\nThe number of blocks from the past for which the fee …\nThe threshold for base fee below which we use the default …\nThe default percentile of gas premiums that are fetched …\nThe threshold max change/difference (in %) at which we …\n1 Ether = 1e18 Wei == 0x0de0b6b3a7640000 Wei\nUtilities for launching an Anvil instance.\nUtilities for launching a go-ethereum dev-mode instance.\nA bit of hack to find an unused TCP port.\nHow long we will wait for anvil to indicate that it is …\nBuilder for launching <code>anvil</code>.\nErrors that can occur when working with the <code>Anvil</code>.\nAn anvil CLI instance. Will close the instance when …\nAn error occurred while deserializing a private key.\nAn error occurred while parsing a hex string.\nThe child anvil process’s stderr was not captured.\nThe private key could not be parsed.\nA line could not be read from the geth stderr.\nSpawning the anvil process failed.\nTimed out waiting for a message from anvil’s stderr.\nReturns the addresses used to instantiate this instance\nAdds an argument to pass to the <code>anvil</code>.\nAdds multiple arguments to pass to the <code>anvil</code>.\nCreates an Anvil builder which will execute <code>anvil</code> at the …\nSets the block-time in seconds which will be used when the …\nSets the block-time in sub-seconds which will be used when …\nReturns the chain of the anvil instance\nSets the chain_id the <code>anvil</code> instance will use.\nReturns a reference to the child process.\nReturns a mutable reference to the child process.\nReturns the HTTP endpoint of this instance\nReturns the HTTP endpoint url of this instance\nSets the <code>fork</code> argument to fork from another currently …\nSets the <code>fork-block-number</code> which will be used in addition …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the private keys used to instantiate this instance\nSets the mnemonic which will be used when the <code>anvil</code> …\nCreates an empty Anvil builder. The default port is 8545. …\nSets the <code>path</code> to the <code>anvil</code> cli\nReturns the port of this instance\nSets the port which will be used when the <code>anvil</code> instance …\nConsumes the builder and spawns <code>anvil</code>.\nSets the timeout which will be used when the <code>anvil</code> …\nConsumes the builder and spawns <code>anvil</code>. If spawning fails, …\nReturns the Websocket endpoint of this instance\nReturns the Websocket endpoint url of this instance\nThe exposed APIs\nThe chain id was not set.\nClique private key error\nCould not create the data directory.\nOptions that can be set in dev mode\nConfiguration options that can be set in dev mode.\nEncountered a fatal error.\nThe geth command\nTimeout for waiting for geth to add a peer.\nHow long we will wait for geth to indicate that it is …\nGenesis error\nBuilder for launching <code>geth</code>.\nErrors that can occur when working with the <code>Geth</code>.\nA geth instance. Will close the instance when dropped.\nErrors that can occur when working with the <code>GethInstance</code>.\nWhether or not geth is in <code>dev</code> mode and configuration …\nGeth init error\nThe child geth process’s stderr was not captured.\nNo stderr was captured from the child process.\nOptions that cannot be set in dev mode\nConfiguration options that cannot be set in dev mode.\nA line could not be read from the geth stderr.\nA line could not be read from the geth stderr.\nSpawn geth error\nTimed out waiting for a message from geth’s stderr.\nTimed out waiting for geth to start.\nWait error\nCreates a Geth builder which will execute <code>geth</code> at the …\nSets the port for authenticated RPC connections.\nSets the block-time which will be used when the <code>geth-cli</code> …\nThe interval at which the dev chain will mine new blocks.\nSets the chain id for the geth instance.\nCalculates the address of the Clique consensus address.\nReturns the private key used to configure clique on this …\nReturns the path to this instances’ data directory\nSets the data directory for geth.\nDisable discovery for the geth instance.\nWhether or not peer discovery is enabled.\nReturns the HTTP endpoint of this instance\nReturns the HTTP endpoint url of this instance\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the genesis configuration used to configure this …\nSets the <code>genesis.json</code> for the geth instance.\nAllow geth to unlock accounts when rpc apis are open.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the path to this instances’ IPC socket\nManually sets the IPC path for the socket manually.\nReturns whether the node is launched in Clique consensus …\nCreates an empty Geth builder.\nReturns the p2p port of this instance\nSets the port which will be used for incoming p2p …\nThe p2p port to use.\nSets the <code>path</code> to the <code>geth</code> executable\nReturns the port of this instance\nSets the port which will be used when the <code>geth-cli</code> …\nSets the Clique Private Key to the <code>geth</code> executable, which …\nConsumes the builder and spawns <code>geth</code>.\nTakes the stderr contained in the child process.\nConsumes the builder and spawns <code>geth</code>. If spawning fails, …\nBlocks until geth adds the specified peer, using 20s as …\nReturns the Websocket endpoint of this instance\nReturns the Websocket endpoint url of this instance")