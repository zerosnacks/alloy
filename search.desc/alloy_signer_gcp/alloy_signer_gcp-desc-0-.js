searchState.loadedDescShard("alloy_signer_gcp", 0, "alloy-signer-gcp\nReference to a GCP KeyRing.\nGoogle Cloud Platform Key Management Service (GCP KMS) …\nErrors thrown by <code>GcpSigner</code>.\nThrown when the GCP KMS API returns a signing error.\n<code>ecdsa</code> error.\nIdentifies a specific key version in the key ring.\nThrown on a request error.\n<code>spki</code> error.\nThe GCP project ID.\nThe GCP location e.g. <code>global</code>.\nThe GCP key ring name.\nReference to a GCP KeyRing.\nGoogle Cloud Platform Key Management Service (GCP KMS) …\nErrors thrown by <code>GcpSigner</code>.\nThrown when the GCP KMS API returns a signing error.\n<code>ecdsa</code> error.\nIdentifies a specific key version in the key ring.\nThrown on a request error.\n<code>spki</code> error.\nMakes a trial recovery to check whether an RSig …\nParse the PEM-encoded public key returned by GCP KMS.\nDecode a raw GCP KMS Signature response.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFetch the pubkey associated with this signer’s key.\nThe GCP project ID.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe GCP location e.g. <code>global</code>.\nThe GCP key ring name.\nCreate a new GCP KeyRing reference.\nConstruct a new specifier for a key with a given keyring, …\nInstantiate a new signer from an existing <code>Client</code>, keyring …\nRecover an rsig from a signature under a known key by …\nSign a digest with this signer’s key\nSign a digest with this signer’s key and add the eip155 <code>v</code>…")