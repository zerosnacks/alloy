searchState.loadedDescShard("alloy_signer_aws", 0, "alloy-signer-aws\nAmazon Web Services Key Management Service (AWS KMS) …\nErrors thrown by <code>AwsSigner</code>.\nThrown when the AWS KMS API returns an error.\n<code>hex</code> error.\n<code>ecdsa</code> error.\nThrown when the AWS KMS API returns a response without a …\nThrown when the AWS KMS API returns a signing error.\nThrown when the AWS KMS API returns a response without a …\n<code>spki</code> error.\nAmazon Web Services Key Management Service (AWS KMS) …\nErrors thrown by <code>AwsSigner</code>.\nThrown when the AWS KMS API returns an error.\n<code>hex</code> error.\n<code>ecdsa</code> error.\nThrown when the AWS KMS API returns a response without a …\nThrown when the AWS KMS API returns a signing error.\nThrown when the AWS KMS API returns a response without a …\n<code>spki</code> error.\nMakes a trial recovery to check whether an RSig …\nDecode an AWS KMS Pubkey response.\nDecode an AWS KMS Signature response.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFetch the pubkey associated with this signer’s key ID.\nFetch the pubkey associated with a key ID.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiate a new signer from an existing <code>Client</code> and key …\nRecover an rsig from a signature under a known key by …\nSign a digest with this signer’s key\nSign a digest with this signer’s key and applies EIP-155.\nSign a digest with the key associated with a key ID.")