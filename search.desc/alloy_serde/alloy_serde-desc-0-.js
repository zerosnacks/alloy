searchState.loadedDescShard("alloy_serde", 0, "Alloy serde helpers for primitive types.\nHelpers for dealing with booleans.\nHelpers for dealing with numbers. Numeric serde helpers.\nSerde serialization and deserialization for <code>bool</code> as <code>0x0</code> or …\nSerialize a B256 as a hex string <em>without</em> the “0x” …\nSerialize a byte vec as a hex string <em>without</em> the “0x” …\nStorage related helpers.\nJson U256 serde helpers.\nSerde serialization and deserialization for <code>bool</code> as <code>0x0</code> or …\nDeserializes a <code>bool</code> via a U1 quantity.\nSerializes a <code>bool</code> via a U1 quantity.\nserde functions for handling primitive optional <code>u128</code> via …\nserde functions for handling <code>Vec&lt;Vec&lt;u128&gt;&gt;</code> via U128\nserde functions for handling <code>Vec&lt;u128&gt;</code> via U128\nserde functions for handling primitive <code>u128</code> via U128\nserde functions for handling <code>Option&lt;u64&gt;</code> via U64\nserde functions for handling <code>u64</code> via U64\nserde functions for handling <code>Option&lt;u8&gt;</code> via U8\nserde functions for handling <code>u8</code> via U8\nDeserializes an <code>Option&lt;u128&gt;</code> accepting a hex quantity …\nSerializes <code>Option&lt;u128&gt;</code> as hex string\nDeserializes an <code>u128</code> accepting a hex quantity string with …\nSerializes u128 as hex string\nDeserializes an <code>u128</code> accepting a hex quantity string with …\nSerializes u128 as hex string\nDeserializes an <code>u128</code> accepting a hex quantity string with …\nSerializes u128 as hex string\nDeserializes an <code>Option</code> from U64 accepting a hex quantity …\nSerializes u64 as hex string\nDeserializes an <code>u64</code> from U64 accepting a hex quantity …\nSerializes u64 as hex string\nDeserializes an <code>Option</code> from U8 accepting a hex quantity …\nSerializes u64 as hex string\nDeserializes an <code>u8</code> from U8 accepting a hex quantity string …\nSerializes u64 as hex string\nDeserializes a <code>bool</code> via a U1 quantity.\nSerializes a <code>bool</code> via a U1 quantity.\nA storage key type that can be serialized to and from a …\nDeserializes the input into an Option&lt;HashMap&lt;B256, …\nReturns the argument unchanged.\nConverts a Bytes value into a B256, accepting inputs that …\nCalls <code>U::from(self)</code>.\nSupports parsing the TTD as an <code>Option&lt;u64&gt;</code>, or <code>Option&lt;f64&gt;</code> …\nConverts the given serde_json::Value into a <code>U256</code> value for …")