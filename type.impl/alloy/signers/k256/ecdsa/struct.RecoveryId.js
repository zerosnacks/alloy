(function() {var type_impls = {
"alloy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RecoveryId\" class=\"impl\"><a href=\"#impl-Clone-for-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RecoveryId\" class=\"impl\"><a href=\"#impl-Debug-for-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-RecoveryId\" class=\"impl\"><a href=\"#impl-Ord-for-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#902-905\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-RecoveryId\" class=\"impl\"><a href=\"#impl-PartialEq-for-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-RecoveryId\" class=\"impl\"><a href=\"#impl-PartialOrd-for-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RecoveryId\" class=\"impl\"><a href=\"#impl-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.trial_recovery_from_msg\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html#tymethod.trial_recovery_from_msg\" class=\"fn\">trial_recovery_from_msg</a>&lt;C&gt;(\n    verifying_key: &amp;VerifyingKey&lt;C&gt;,\n    msg: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    signature: &amp;<a class=\"struct\" href=\"alloy/signers/wallet/yubihsm/ecdsa/struct.Signature.html\" title=\"struct alloy::signers::wallet::yubihsm::ecdsa::Signature\">Signature</a>&lt;C&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a>, <a class=\"struct\" href=\"alloy/signers/k256/schnorr/struct.Error.html\" title=\"struct alloy::signers::k256::schnorr::Error\">Error</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"alloy/signers/k256/ecdsa/hazmat/trait.DigestPrimitive.html\" title=\"trait alloy::signers::k256::ecdsa::hazmat::DigestPrimitive\">DigestPrimitive</a> + <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.PrimeCurve.html\" title=\"trait alloy::signers::k256::elliptic_curve::PrimeCurve\">PrimeCurve</a> + <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.CurveArithmetic.html\" title=\"trait alloy::signers::k256::elliptic_curve::CurveArithmetic\">CurveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.CurveArithmetic.html\" title=\"trait alloy::signers::k256::elliptic_curve::CurveArithmetic\">CurveArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/trait.CurveArithmetic.html#associatedtype.AffinePoint\" title=\"type alloy::signers::k256::elliptic_curve::CurveArithmetic::AffinePoint\">AffinePoint</a>: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/point/trait.DecompressPoint.html\" title=\"trait alloy::signers::k256::elliptic_curve::point::DecompressPoint\">DecompressPoint</a>&lt;C&gt; + <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/sec1/trait.FromEncodedPoint.html\" title=\"trait alloy::signers::k256::elliptic_curve::sec1::FromEncodedPoint\">FromEncodedPoint</a>&lt;C&gt; + <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/sec1/trait.ToEncodedPoint.html\" title=\"trait alloy::signers::k256::elliptic_curve::sec1::ToEncodedPoint\">ToEncodedPoint</a>&lt;C&gt; + <a class=\"trait\" href=\"alloy/signers/k256/ecdsa/hazmat/trait.VerifyPrimitive.html\" title=\"trait alloy::signers::k256::ecdsa::hazmat::VerifyPrimitive\">VerifyPrimitive</a>&lt;C&gt;,\n    &lt;C as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html\" title=\"trait alloy::signers::k256::elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html#associatedtype.FieldBytesSize\" title=\"type alloy::signers::k256::elliptic_curve::Curve::FieldBytesSize\">FieldBytesSize</a>: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/sec1/trait.ModulusSize.html\" title=\"trait alloy::signers::k256::elliptic_curve::sec1::ModulusSize\">ModulusSize</a>,\n    &lt;&lt;C as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html\" title=\"trait alloy::signers::k256::elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html#associatedtype.FieldBytesSize\" title=\"type alloy::signers::k256::elliptic_curve::Curve::FieldBytesSize\">FieldBytesSize</a> as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/ops/trait.Add.html\" title=\"trait alloy::signers::k256::elliptic_curve::ops::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/ops/trait.Add.html#associatedtype.Output\" title=\"type alloy::signers::k256::elliptic_curve::ops::Add::Output\">Output</a>: <a class=\"trait\" href=\"alloy/signers/k256/ecdsa/signature/digest/block_buffer/generic_array/trait.ArrayLength.html\" title=\"trait alloy::signers::k256::ecdsa::signature::digest::block_buffer::generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>verifying</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Given a public key, message, and signature, use trial recovery\nto determine if a suitable recovery ID exists, or return an error\notherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trial_recovery_from_digest\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html#tymethod.trial_recovery_from_digest\" class=\"fn\">trial_recovery_from_digest</a>&lt;C, D&gt;(\n    verifying_key: &amp;VerifyingKey&lt;C&gt;,\n    digest: D,\n    signature: &amp;<a class=\"struct\" href=\"alloy/signers/wallet/yubihsm/ecdsa/struct.Signature.html\" title=\"struct alloy::signers::wallet::yubihsm::ecdsa::Signature\">Signature</a>&lt;C&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a>, <a class=\"struct\" href=\"alloy/signers/k256/schnorr/struct.Error.html\" title=\"struct alloy::signers::k256::schnorr::Error\">Error</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.PrimeCurve.html\" title=\"trait alloy::signers::k256::elliptic_curve::PrimeCurve\">PrimeCurve</a> + <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.CurveArithmetic.html\" title=\"trait alloy::signers::k256::elliptic_curve::CurveArithmetic\">CurveArithmetic</a>,\n    D: <a class=\"trait\" href=\"alloy/signers/k256/sha2/trait.Digest.html\" title=\"trait alloy::signers::k256::sha2::Digest\">Digest</a>,\n    &lt;C as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.CurveArithmetic.html\" title=\"trait alloy::signers::k256::elliptic_curve::CurveArithmetic\">CurveArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/trait.CurveArithmetic.html#associatedtype.AffinePoint\" title=\"type alloy::signers::k256::elliptic_curve::CurveArithmetic::AffinePoint\">AffinePoint</a>: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/point/trait.DecompressPoint.html\" title=\"trait alloy::signers::k256::elliptic_curve::point::DecompressPoint\">DecompressPoint</a>&lt;C&gt; + <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/sec1/trait.FromEncodedPoint.html\" title=\"trait alloy::signers::k256::elliptic_curve::sec1::FromEncodedPoint\">FromEncodedPoint</a>&lt;C&gt; + <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/sec1/trait.ToEncodedPoint.html\" title=\"trait alloy::signers::k256::elliptic_curve::sec1::ToEncodedPoint\">ToEncodedPoint</a>&lt;C&gt; + <a class=\"trait\" href=\"alloy/signers/k256/ecdsa/hazmat/trait.VerifyPrimitive.html\" title=\"trait alloy::signers::k256::ecdsa::hazmat::VerifyPrimitive\">VerifyPrimitive</a>&lt;C&gt;,\n    &lt;C as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html\" title=\"trait alloy::signers::k256::elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html#associatedtype.FieldBytesSize\" title=\"type alloy::signers::k256::elliptic_curve::Curve::FieldBytesSize\">FieldBytesSize</a>: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/sec1/trait.ModulusSize.html\" title=\"trait alloy::signers::k256::elliptic_curve::sec1::ModulusSize\">ModulusSize</a>,\n    &lt;&lt;C as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html\" title=\"trait alloy::signers::k256::elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html#associatedtype.FieldBytesSize\" title=\"type alloy::signers::k256::elliptic_curve::Curve::FieldBytesSize\">FieldBytesSize</a> as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/ops/trait.Add.html\" title=\"trait alloy::signers::k256::elliptic_curve::ops::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/ops/trait.Add.html#associatedtype.Output\" title=\"type alloy::signers::k256::elliptic_curve::ops::Add::Output\">Output</a>: <a class=\"trait\" href=\"alloy/signers/k256/ecdsa/signature/digest/block_buffer/generic_array/trait.ArrayLength.html\" title=\"trait alloy::signers::k256::ecdsa::signature::digest::block_buffer::generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>verifying</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Given a public key, message digest, and signature, use trial recovery\nto determine if a suitable recovery ID exists, or return an error\notherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trial_recovery_from_prehash\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html#tymethod.trial_recovery_from_prehash\" class=\"fn\">trial_recovery_from_prehash</a>&lt;C&gt;(\n    verifying_key: &amp;VerifyingKey&lt;C&gt;,\n    prehash: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    signature: &amp;<a class=\"struct\" href=\"alloy/signers/wallet/yubihsm/ecdsa/struct.Signature.html\" title=\"struct alloy::signers::wallet::yubihsm::ecdsa::Signature\">Signature</a>&lt;C&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a>, <a class=\"struct\" href=\"alloy/signers/k256/schnorr/struct.Error.html\" title=\"struct alloy::signers::k256::schnorr::Error\">Error</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.PrimeCurve.html\" title=\"trait alloy::signers::k256::elliptic_curve::PrimeCurve\">PrimeCurve</a> + <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.CurveArithmetic.html\" title=\"trait alloy::signers::k256::elliptic_curve::CurveArithmetic\">CurveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.CurveArithmetic.html\" title=\"trait alloy::signers::k256::elliptic_curve::CurveArithmetic\">CurveArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/trait.CurveArithmetic.html#associatedtype.AffinePoint\" title=\"type alloy::signers::k256::elliptic_curve::CurveArithmetic::AffinePoint\">AffinePoint</a>: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/point/trait.DecompressPoint.html\" title=\"trait alloy::signers::k256::elliptic_curve::point::DecompressPoint\">DecompressPoint</a>&lt;C&gt; + <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/sec1/trait.FromEncodedPoint.html\" title=\"trait alloy::signers::k256::elliptic_curve::sec1::FromEncodedPoint\">FromEncodedPoint</a>&lt;C&gt; + <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/sec1/trait.ToEncodedPoint.html\" title=\"trait alloy::signers::k256::elliptic_curve::sec1::ToEncodedPoint\">ToEncodedPoint</a>&lt;C&gt; + <a class=\"trait\" href=\"alloy/signers/k256/ecdsa/hazmat/trait.VerifyPrimitive.html\" title=\"trait alloy::signers::k256::ecdsa::hazmat::VerifyPrimitive\">VerifyPrimitive</a>&lt;C&gt;,\n    &lt;C as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html\" title=\"trait alloy::signers::k256::elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html#associatedtype.FieldBytesSize\" title=\"type alloy::signers::k256::elliptic_curve::Curve::FieldBytesSize\">FieldBytesSize</a>: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/sec1/trait.ModulusSize.html\" title=\"trait alloy::signers::k256::elliptic_curve::sec1::ModulusSize\">ModulusSize</a>,\n    &lt;&lt;C as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html\" title=\"trait alloy::signers::k256::elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/trait.Curve.html#associatedtype.FieldBytesSize\" title=\"type alloy::signers::k256::elliptic_curve::Curve::FieldBytesSize\">FieldBytesSize</a> as <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/ops/trait.Add.html\" title=\"trait alloy::signers::k256::elliptic_curve::ops::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"alloy/signers/k256/elliptic_curve/ops/trait.Add.html#associatedtype.Output\" title=\"type alloy::signers::k256::elliptic_curve::ops::Add::Output\">Output</a>: <a class=\"trait\" href=\"alloy/signers/k256/ecdsa/signature/digest/block_buffer/generic_array/trait.ArrayLength.html\" title=\"trait alloy::signers::k256::ecdsa::signature::digest::block_buffer::generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>verifying</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Given a public key, message digest, and signature, use trial recovery\nto determine if a suitable recovery ID exists, or return an error\notherwise.</p>\n</div></details></div></details>",0,"alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RecoveryId\" class=\"impl\"><a href=\"#impl-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><h4 class=\"code-header\">pub const <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 3u8</h4></section></summary><div class=\"docblock\"><p>Maximum supported value for the recovery ID (inclusive).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html#tymethod.new\" class=\"fn\">new</a>(is_y_odd: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, is_x_reduced: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\"><code>RecoveryId</code></a> from the following 1-bit arguments:</p>\n<ul>\n<li><code>is_y_odd</code>: is the affine y-coordinate of 𝑘×𝑮 odd?</li>\n<li><code>is_x_reduced</code>: did the affine x-coordinate of 𝑘×𝑮 overflow the curve order?</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_x_reduced\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html#tymethod.is_x_reduced\" class=\"fn\">is_x_reduced</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Did the affine x-coordinate of 𝑘×𝑮 overflow the curve order?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_y_odd\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html#tymethod.is_y_odd\" class=\"fn\">is_y_odd</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Is the affine y-coordinate of 𝑘×𝑮 odd?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html#tymethod.from_byte\" class=\"fn\">from_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert a <code>u8</code> into a <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\"><code>RecoveryId</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html#tymethod.to_byte\" class=\"fn\">to_byte</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Convert this <a href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\"><code>RecoveryId</code></a> into a <code>u8</code>.</p>\n</div></details></div></details>",0,"alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu8%3E-for-RecoveryId\" class=\"impl\"><a href=\"#impl-TryFrom%3Cu8%3E-for-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"alloy/signers/k256/schnorr/struct.Error.html\" title=\"struct alloy::signers::k256::schnorr::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a>, <a class=\"struct\" href=\"alloy/signers/k256/schnorr/struct.Error.html\" title=\"struct alloy::signers::k256::schnorr::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u8>","alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"],["<section id=\"impl-Copy-for-RecoveryId\" class=\"impl\"><a href=\"#impl-Copy-for-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section>","Copy","alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"],["<section id=\"impl-Eq-for-RecoveryId\" class=\"impl\"><a href=\"#impl-Eq-for-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section>","Eq","alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"],["<section id=\"impl-StructuralPartialEq-for-RecoveryId\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-RecoveryId\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"alloy/signers/k256/ecdsa/struct.RecoveryId.html\" title=\"struct alloy::signers::k256::ecdsa::RecoveryId\">RecoveryId</a></h3></section>","StructuralPartialEq","alloy::signers::wallet::yubihsm::ecdsa::secp256k1::RecoveryId"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()