(function() {var type_impls = {
"alloy_eips":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary%3C'arbitrary%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Arbitrary%3C'arbitrary%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'arbitrary, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Arbitrary&lt;'arbitrary&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>(u: &amp;mut Unstructured&lt;'arbitrary&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;N&gt;, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the given unstructured data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_take_rest\" class=\"method trait-impl\"><a href=\"#method.arbitrary_take_rest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_take_rest</a>(\n    u: Unstructured&lt;'arbitrary&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;N&gt;, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the entirety of the given\nunstructured data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a>Read more</a></div></details></div></details>","Arbitrary<'arbitrary>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Arbitrary-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Arbitrary for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Parameters\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Parameters\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Parameters</a> = &lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>] as Arbitrary&gt;::Parameters</h4></section></summary><div class='docblock'>The type of parameters that <a href=\"trait.Arbitrary.html#tymethod.arbitrary_with\"><code>arbitrary_with</code></a> accepts for configuration\nof the generated <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a>. Parameters must implement <a href=\"https://doc.rust-lang.org/nightly/std/default/trait.Default.html\"><code>Default</code></a>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Strategy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Strategy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Strategy</a> = Map&lt;&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>] as Arbitrary&gt;::Strategy, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]) -&gt; FixedBytes&lt;N&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> used to generate values of type <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_with\" class=\"method trait-impl\"><a href=\"#method.arbitrary_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_with</a>(\n    _top: &lt;FixedBytes&lt;N&gt; as Arbitrary&gt;::Parameters\n) -&gt; &lt;FixedBytes&lt;N&gt; as Arbitrary&gt;::Strategy</h4></section></summary><div class='docblock'>Generates a <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> for producing arbitrary values of type the\nimplementing type (<code>Self</code>). The strategy is passed the arguments given\nin args. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>() -&gt; Self::Strategy</h4></section></summary><div class='docblock'>Generates a <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> for producing arbitrary values\nof type the implementing type (<code>Self</code>). <a>Read more</a></div></details></div></details>","Arbitrary","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8; N]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8; N]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-BitAnd-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = FixedBytes&lt;N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: FixedBytes&lt;N&gt;) -&gt; &lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: FixedBytes&lt;N&gt;)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-BitOr-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = FixedBytes&lt;N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: FixedBytes&lt;N&gt;) -&gt; &lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: FixedBytes&lt;N&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-BitXor-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = FixedBytes&lt;N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: FixedBytes&lt;N&gt;) -&gt; &lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: FixedBytes&lt;N&gt;)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Borrow%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[u8]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Borrow%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[u8; N]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-BorrowMut%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[u8]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-BorrowMut%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[u8; N]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Clone-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Debug-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Decodable-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Decodable for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(buf: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;N&gt;, Error&gt;</h4></section></summary><div class='docblock'>Decodes the blob into the appropriate type. <code>buf</code> must be advanced past\nthe decoded object.</div></details></div></details>","Decodable","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Decode-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Decode for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ssz_fixed_len\" class=\"method trait-impl\"><a href=\"#method.is_ssz_fixed_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_ssz_fixed_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this object has a fixed-length. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ssz_fixed_len\" class=\"method trait-impl\"><a href=\"#method.ssz_fixed_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ssz_fixed_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of bytes this object occupies in the fixed-length portion of the SSZ bytes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ssz_bytes\" class=\"method trait-impl\"><a href=\"#method.from_ssz_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_ssz_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;N&gt;, DecodeError&gt;</h4></section></summary><div class='docblock'>Attempts to decode <code>Self</code> from <code>bytes</code>, returning a <code>DecodeError</code> on failure. <a>Read more</a></div></details></div></details>","Decode","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Default-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Deref-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-DerefMut-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut &lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;N&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Display-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Encodable-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Encodable for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.length\" class=\"method trait-impl\"><a href=\"#method.length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the length of the encoding of this type in bytes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self, out: &amp;mut dyn BufMut)</h4></section></summary><div class='docblock'>Encodes the type into the <code>out</code> buffer.</div></details></div></details>","Encodable","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Encode-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Encode for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ssz_fixed_len\" class=\"method trait-impl\"><a href=\"#method.is_ssz_fixed_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_ssz_fixed_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this object has a fixed-length. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ssz_bytes_len\" class=\"method trait-impl\"><a href=\"#method.ssz_bytes_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ssz_bytes_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the size (in bytes) when <code>self</code> is serialized. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ssz_fixed_len\" class=\"method trait-impl\"><a href=\"#method.ssz_fixed_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ssz_fixed_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of bytes this object occupies in the fixed-length portion of the SSZ bytes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ssz_append\" class=\"method trait-impl\"><a href=\"#method.ssz_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ssz_append</a>(&amp;self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Append the encoding <code>self</code> to <code>buf</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ssz_bytes\" class=\"method trait-impl\"><a href=\"#method.as_ssz_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_ssz_bytes</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the full-form encoding of this object. <a>Read more</a></div></details></div></details>","Encode","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><h4 class=\"code-header\">pub const <a class=\"constant\">ZERO</a>: FixedBytes&lt;N&gt; = _</h4></section></summary><div class=\"docblock\"><p>Array of Zero bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Wraps the given byte array in [<code>FixedBytes</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_last_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">with_last_byte</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new [<code>FixedBytes</code>] with the last byte set to <code>x</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new [<code>FixedBytes</code>] where all bytes are set to <code>byte</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this byte array (<code>N</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; FixedBytes&lt;N&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>getrandom</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Creates a new [<code>FixedBytes</code>] with cryptographically random content.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the underlying call to\n<a href=\"https://docs.rs/getrandom/0.2.14/getrandom/fn.getrandom_uninit.html\" title=\"fn getrandom::getrandom_uninit\"><code>getrandom_uninit</code></a> fails.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_random</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;N&gt;, <a class=\"struct\" href=\"https://docs.rs/getrandom/0.2.14/getrandom/error/struct.Error.html\" title=\"struct getrandom::error::Error\">Error</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>getrandom</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Tries to create a new [<code>FixedBytes</code>] with cryptographically random\ncontent.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function only propagates the error from the underlying call to\n<a href=\"https://docs.rs/getrandom/0.2.14/getrandom/fn.getrandom_uninit.html\" title=\"fn getrandom::getrandom_uninit\"><code>getrandom_uninit</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_with\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_with</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; FixedBytes&lt;N&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>rand</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Creates a new [<code>FixedBytes</code>] with the given random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>getrandom</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Fills this [<code>FixedBytes</code>] with cryptographically random content.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the underlying call to\n<a href=\"https://docs.rs/getrandom/0.2.14/getrandom/fn.getrandom_uninit.html\" title=\"fn getrandom::getrandom_uninit\"><code>getrandom_uninit</code></a> fails.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_randomize</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/getrandom/0.2.14/getrandom/error/struct.Error.html\" title=\"struct getrandom::error::Error\">Error</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>getrandom</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Tries to fill this [<code>FixedBytes</code>] with cryptographically random content.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function only propagates the error from the underlying call to\n<a href=\"https://docs.rs/getrandom/0.2.14/getrandom/fn.getrandom_uninit.html\" title=\"fn getrandom::getrandom_uninit\"><code>getrandom_uninit</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_with\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_with</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>)<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>rand</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Fills this [<code>FixedBytes</code>] with the given random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.concat_const\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">concat_const</a>&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const Z: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;(\n    self,\n    other: FixedBytes&lt;M&gt;\n) -&gt; FixedBytes&lt;Z&gt;</h4></section></summary><div class=\"docblock\"><p>Concatenate two <code>FixedBytes</code>.</p>\n<p>Due to constraints in the language, the user must specify the value of\nthe output size <code>Z</code>.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>Panics if <code>Z</code> is not equal to <code>N + M</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new [<code>FixedBytes</code>] from the given slice <code>src</code>.</p>\n<p>For a fallible version, use the <code>TryFrom&lt;&amp;[u8]&gt;</code> implementation.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.left_padding_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">left_padding_from</a>(value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new [<code>FixedBytes</code>] from the given slice <code>src</code>, left-padding it\nwith zeroes if necessary.</p>\n<h5 id=\"note-1\"><a class=\"doc-anchor\" href=\"#note-1\">§</a>Note</h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-4\"><a class=\"doc-anchor\" href=\"#panics-4\">§</a>Panics</h5>\n<p>Panics if <code>src.len() &gt; N</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.right_padding_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">right_padding_from</a>(value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new [<code>FixedBytes</code>] from the given slice <code>src</code>, right-padding it\nwith zeroes if necessary.</p>\n<h5 id=\"note-2\"><a class=\"doc-anchor\" href=\"#note-2\">§</a>Note</h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-5\"><a class=\"doc-anchor\" href=\"#panics-5\">§</a>Panics</h5>\n<p>Panics if <code>src.len() &gt; N</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a slice containing the entire array. Equivalent to <code>&amp;s[..]</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable slice containing the entire array. Equivalent to\n<code>&amp;mut s[..]</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, other: &amp;FixedBytes&lt;N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>self</code> are also set in <code>b</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_covers\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">const_covers</a>(self, other: FixedBytes&lt;N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>self</code> are also set in <code>b</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_eq\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">const_eq</a>(&amp;self, other: &amp;FixedBytes&lt;N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Compile-time equality. NOT constant-time equality.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_is_zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">const_is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_and\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">bit_and</a>(self, rhs: FixedBytes&lt;N&gt;) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the bitwise AND of two <code>FixedBytes</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_or\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">bit_or</a>(self, rhs: FixedBytes&lt;N&gt;) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the bitwise OR of two <code>FixedBytes</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_xor\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">bit_xor</a>(self, rhs: FixedBytes&lt;N&gt;) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the bitwise XOR of two <code>FixedBytes</code>.</p>\n</div></details></div></details>",0,"alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&[u8; N]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&mut [u8; N]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(original: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]) -&gt; FixedBytes&lt;N&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[u8; N]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAddress%3E-for-FixedBytes%3C20%3E\" class=\"impl\"><a href=\"#impl-From%3CAddress%3E-for-FixedBytes%3C20%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Address&gt; for FixedBytes&lt;20&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(original: Address) -&gt; FixedBytes&lt;20&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Address>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBloom%3E-for-FixedBytes%3C256%3E\" class=\"impl\"><a href=\"#impl-From%3CBloom%3E-for-FixedBytes%3C256%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Bloom&gt; for FixedBytes&lt;256&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(original: Bloom) -&gt; FixedBytes&lt;256&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Bloom>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFunction%3E-for-FixedBytes%3C24%3E\" class=\"impl\"><a href=\"#impl-From%3CFunction%3E-for-FixedBytes%3C24%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Function&gt; for FixedBytes&lt;24&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(original: Function) -&gt; FixedBytes&lt;24&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Function>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSigned%3C128,+2%3E%3E-for-FixedBytes%3C16%3E\" class=\"impl\"><a href=\"#impl-From%3CSigned%3C128,+2%3E%3E-for-FixedBytes%3C16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signed&lt;128, 2&gt;&gt; for FixedBytes&lt;16&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Signed&lt;128, 2&gt;) -&gt; FixedBytes&lt;16&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Signed<128, 2>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSigned%3C16,+1%3E%3E-for-FixedBytes%3C2%3E\" class=\"impl\"><a href=\"#impl-From%3CSigned%3C16,+1%3E%3E-for-FixedBytes%3C2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signed&lt;16, 1&gt;&gt; for FixedBytes&lt;2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Signed&lt;16, 1&gt;) -&gt; FixedBytes&lt;2&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Signed<16, 1>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSigned%3C160,+3%3E%3E-for-FixedBytes%3C20%3E\" class=\"impl\"><a href=\"#impl-From%3CSigned%3C160,+3%3E%3E-for-FixedBytes%3C20%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signed&lt;160, 3&gt;&gt; for FixedBytes&lt;20&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Signed&lt;160, 3&gt;) -&gt; FixedBytes&lt;20&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Signed<160, 3>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSigned%3C256,+4%3E%3E-for-FixedBytes%3C32%3E\" class=\"impl\"><a href=\"#impl-From%3CSigned%3C256,+4%3E%3E-for-FixedBytes%3C32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signed&lt;256, 4&gt;&gt; for FixedBytes&lt;32&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Signed&lt;256, 4&gt;) -&gt; FixedBytes&lt;32&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Signed<256, 4>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSigned%3C32,+1%3E%3E-for-FixedBytes%3C4%3E\" class=\"impl\"><a href=\"#impl-From%3CSigned%3C32,+1%3E%3E-for-FixedBytes%3C4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signed&lt;32, 1&gt;&gt; for FixedBytes&lt;4&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Signed&lt;32, 1&gt;) -&gt; FixedBytes&lt;4&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Signed<32, 1>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSigned%3C512,+8%3E%3E-for-FixedBytes%3C64%3E\" class=\"impl\"><a href=\"#impl-From%3CSigned%3C512,+8%3E%3E-for-FixedBytes%3C64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signed&lt;512, 8&gt;&gt; for FixedBytes&lt;64&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Signed&lt;512, 8&gt;) -&gt; FixedBytes&lt;64&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Signed<512, 8>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSigned%3C64,+1%3E%3E-for-FixedBytes%3C8%3E\" class=\"impl\"><a href=\"#impl-From%3CSigned%3C64,+1%3E%3E-for-FixedBytes%3C8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signed&lt;64, 1&gt;&gt; for FixedBytes&lt;8&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Signed&lt;64, 1&gt;) -&gt; FixedBytes&lt;8&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Signed<64, 1>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSigned%3C8,+1%3E%3E-for-FixedBytes%3C1%3E\" class=\"impl\"><a href=\"#impl-From%3CSigned%3C8,+1%3E%3E-for-FixedBytes%3C1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signed&lt;8, 1&gt;&gt; for FixedBytes&lt;1&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Signed&lt;8, 1&gt;) -&gt; FixedBytes&lt;1&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Signed<8, 1>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUint%3C128,+2%3E%3E-for-FixedBytes%3C16%3E\" class=\"impl\"><a href=\"#impl-From%3CUint%3C128,+2%3E%3E-for-FixedBytes%3C16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uint&lt;128, 2&gt;&gt; for FixedBytes&lt;16&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Uint&lt;128, 2&gt;) -&gt; FixedBytes&lt;16&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Uint<128, 2>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUint%3C16,+1%3E%3E-for-FixedBytes%3C2%3E\" class=\"impl\"><a href=\"#impl-From%3CUint%3C16,+1%3E%3E-for-FixedBytes%3C2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uint&lt;16, 1&gt;&gt; for FixedBytes&lt;2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Uint&lt;16, 1&gt;) -&gt; FixedBytes&lt;2&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Uint<16, 1>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUint%3C160,+3%3E%3E-for-FixedBytes%3C20%3E\" class=\"impl\"><a href=\"#impl-From%3CUint%3C160,+3%3E%3E-for-FixedBytes%3C20%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uint&lt;160, 3&gt;&gt; for FixedBytes&lt;20&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Uint&lt;160, 3&gt;) -&gt; FixedBytes&lt;20&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Uint<160, 3>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUint%3C256,+4%3E%3E-for-FixedBytes%3C32%3E\" class=\"impl\"><a href=\"#impl-From%3CUint%3C256,+4%3E%3E-for-FixedBytes%3C32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uint&lt;256, 4&gt;&gt; for FixedBytes&lt;32&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Uint&lt;256, 4&gt;) -&gt; FixedBytes&lt;32&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Uint<256, 4>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUint%3C32,+1%3E%3E-for-FixedBytes%3C4%3E\" class=\"impl\"><a href=\"#impl-From%3CUint%3C32,+1%3E%3E-for-FixedBytes%3C4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uint&lt;32, 1&gt;&gt; for FixedBytes&lt;4&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Uint&lt;32, 1&gt;) -&gt; FixedBytes&lt;4&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Uint<32, 1>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUint%3C512,+8%3E%3E-for-FixedBytes%3C64%3E\" class=\"impl\"><a href=\"#impl-From%3CUint%3C512,+8%3E%3E-for-FixedBytes%3C64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uint&lt;512, 8&gt;&gt; for FixedBytes&lt;64&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Uint&lt;512, 8&gt;) -&gt; FixedBytes&lt;64&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Uint<512, 8>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUint%3C64,+1%3E%3E-for-FixedBytes%3C8%3E\" class=\"impl\"><a href=\"#impl-From%3CUint%3C64,+1%3E%3E-for-FixedBytes%3C8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uint&lt;64, 1&gt;&gt; for FixedBytes&lt;8&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Uint&lt;64, 1&gt;) -&gt; FixedBytes&lt;8&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Uint<64, 1>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUint%3C8,+1%3E%3E-for-FixedBytes%3C1%3E\" class=\"impl\"><a href=\"#impl-From%3CUint%3C8,+1%3E%3E-for-FixedBytes%3C1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uint&lt;8, 1&gt;&gt; for FixedBytes&lt;1&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Uint&lt;8, 1&gt;) -&gt; FixedBytes&lt;1&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<Uint<8, 1>>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci128%3E-for-FixedBytes%3C16%3E\" class=\"impl\"><a href=\"#impl-From%3Ci128%3E-for-FixedBytes%3C16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for FixedBytes&lt;16&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; FixedBytes&lt;16&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<i128>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci16%3E-for-FixedBytes%3C2%3E\" class=\"impl\"><a href=\"#impl-From%3Ci16%3E-for-FixedBytes%3C2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for FixedBytes&lt;2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; FixedBytes&lt;2&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<i16>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-FixedBytes%3C4%3E\" class=\"impl\"><a href=\"#impl-From%3Ci32%3E-for-FixedBytes%3C4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for FixedBytes&lt;4&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; FixedBytes&lt;4&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<i32>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci64%3E-for-FixedBytes%3C8%3E\" class=\"impl\"><a href=\"#impl-From%3Ci64%3E-for-FixedBytes%3C8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for FixedBytes&lt;8&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; FixedBytes&lt;8&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<i64>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci8%3E-for-FixedBytes%3C1%3E\" class=\"impl\"><a href=\"#impl-From%3Ci8%3E-for-FixedBytes%3C1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for FixedBytes&lt;1&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; FixedBytes&lt;1&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<i8>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu128%3E-for-FixedBytes%3C16%3E\" class=\"impl\"><a href=\"#impl-From%3Cu128%3E-for-FixedBytes%3C16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for FixedBytes&lt;16&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; FixedBytes&lt;16&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<u128>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-FixedBytes%3C2%3E\" class=\"impl\"><a href=\"#impl-From%3Cu16%3E-for-FixedBytes%3C2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for FixedBytes&lt;2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; FixedBytes&lt;2&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<u16>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-FixedBytes%3C4%3E\" class=\"impl\"><a href=\"#impl-From%3Cu32%3E-for-FixedBytes%3C4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for FixedBytes&lt;4&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; FixedBytes&lt;4&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<u32>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-FixedBytes%3C8%3E\" class=\"impl\"><a href=\"#impl-From%3Cu64%3E-for-FixedBytes%3C8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for FixedBytes&lt;8&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; FixedBytes&lt;8&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<u64>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-FixedBytes%3C1%3E\" class=\"impl\"><a href=\"#impl-From%3Cu8%3E-for-FixedBytes%3C1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for FixedBytes&lt;1&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; FixedBytes&lt;1&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-width unsigned integer into a fixed byte array\nby interpreting the bytes as big-endian.</p>\n</div></details></div></details>","From<u8>","alloy_eips::eip4844::Blob"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromHex-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-FromHex-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; FromHex for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_hex\" class=\"method trait-impl\"><a href=\"#method.from_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_hex</a>&lt;T&gt;(\n    hex: T\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;N&gt;, &lt;FixedBytes&lt;N&gt; as FromHex&gt;::Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Creates an instance of type <code>Self</code> from the given hex string, or fails\nwith a custom error type. <a>Read more</a></div></details></div></details>","FromHex","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSql%3C'a%3E-for-FixedBytes%3CBITS%3E\" class=\"impl\"><a href=\"#impl-FromSql%3C'a%3E-for-FixedBytes%3CBITS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, const BITS: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; FromSql&lt;'a&gt; for FixedBytes&lt;BITS&gt;</h3></section></summary><div class=\"docblock\"><p>Converts <code>FixedBytes</code> From Postgres Bytea Type.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.accepts\" class=\"method trait-impl\"><a href=\"#method.accepts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">accepts</a>(ty: &amp;Type) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if a value of this type can be created from the specified\nPostgres <code>Type</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_sql\" class=\"method trait-impl\"><a href=\"#method.from_sql\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_sql</a>(\n    _: &amp;Type,\n    raw: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;BITS&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;</h4></section></summary><div class='docblock'>Creates a new value of this type from a buffer of data of the specified\nPostgres <code>Type</code> in its binary format. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_sql_null\" class=\"method trait-impl\"><a href=\"#method.from_sql_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_sql_null</a>(ty: &amp;Type) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;</h4></section></summary><div class='docblock'>Creates a new value of this type from a <code>NULL</code> SQL value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_sql_nullable\" class=\"method trait-impl\"><a href=\"#method.from_sql_nullable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_sql_nullable</a>(\n    ty: &amp;Type,\n    raw: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;</h4></section></summary><div class='docblock'>A convenience function that delegates to <code>from_sql</code> and <code>from_sql_null</code> depending on the\nvalue of <code>raw</code>.</div></details></div></details>","FromSql<'a>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-FromStr-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;N&gt;, &lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Hash-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C__IdxT%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Index%3C__IdxT%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;__IdxT, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;__IdxT&gt; for FixedBytes&lt;N&gt;<div class=\"where\">where\n    [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;__IdxT&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>] as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;__IdxT&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, idx: __IdxT) -&gt; &amp;&lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;__IdxT&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<__IdxT>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3C__IdxT%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-IndexMut%3C__IdxT%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;__IdxT, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;__IdxT&gt; for FixedBytes&lt;N&gt;<div class=\"where\">where\n    [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;__IdxT&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(\n    &amp;mut self,\n    idx: __IdxT\n) -&gt; &amp;mut &lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;__IdxT&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<__IdxT>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-IntoIterator-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>] as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = &lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>] as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-LowerHex-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLenAssoc-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLenAssoc-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; MaxEncodedLenAssoc for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LEN\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.LEN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">LEN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The maximum length.</div></details></div></details>","MaxEncodedLenAssoc","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Ord-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;FixedBytes&lt;N&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#902-905\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-PartialEq%3C%26%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&[u8]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-PartialEq%3C%26%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&[u8; N]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-PartialEq%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[u8]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-PartialEq%3C%5Bu8;+N%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[u8; N]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;FixedBytes&lt;N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3C%26%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-PartialOrd%3C%26%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<&[u8]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-PartialOrd%3C%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<[u8]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-PartialOrd-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;FixedBytes&lt;N&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToSql-for-FixedBytes%3CBITS%3E\" class=\"impl\"><a href=\"#impl-ToSql-for-FixedBytes%3CBITS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const BITS: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; ToSql for FixedBytes&lt;BITS&gt;</h3></section></summary><div class=\"docblock\"><p>Converts <code>FixedBytes</code> to Postgres Bytea Type.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_sql\" class=\"method trait-impl\"><a href=\"#method.to_sql\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_sql</a>(\n    &amp;self,\n    _: &amp;Type,\n    out: &amp;mut BytesMut\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;IsNull, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> into the binary format of the specified\nPostgres <code>Type</code>, appending it to <code>out</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.accepts\" class=\"method trait-impl\"><a href=\"#method.accepts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">accepts</a>(ty: &amp;Type) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if a value of this type can be converted to the specified\nPostgres <code>Type</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_sql_checked\" class=\"method trait-impl\"><a href=\"#method.to_sql_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_sql_checked</a>(\n    &amp;self,\n    ty: &amp;Type,\n    out: &amp;mut BytesMut\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;IsNull, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;</h4></section></summary><div class='docblock'>An adaptor method used internally by Rust-Postgres. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_format\" class=\"method trait-impl\"><a href=\"#method.encode_format\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_format</a>(&amp;self, _ty: &amp;Type) -&gt; Format</h4></section></summary><div class='docblock'>Specify the encode format</div></details></div></details>","ToSql","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"docblock\"><p>Tries to create a <code>FixedBytes&lt;N&gt;</code> by copying from a slice <code>&amp;[u8]</code>. Succeeds\nif <code>slice.len() == N</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    slice: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;N&gt;, &lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[u8]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26mut+%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26mut+%5Bu8%5D%3E-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"docblock\"><p>Tries to create a <code>FixedBytes&lt;N&gt;</code> by copying from a mutable slice <code>&amp;mut [u8]</code>. Succeeds if <code>slice.len() == N</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    slice: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;N&gt;, &lt;FixedBytes&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&mut [u8]>","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-UpperHex-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for FixedBytes&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<section id=\"impl-Copy-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Copy-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for FixedBytes&lt;N&gt;</h3></section>","Copy","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<section id=\"impl-Eq-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-Eq-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for FixedBytes&lt;N&gt;</h3></section>","Eq","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2310%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C32%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2310%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#10}::{constant#0}&gt; for FixedBytes&lt;32&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#10}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2311%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C64%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2311%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#11}::{constant#0}&gt; for FixedBytes&lt;64&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#11}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2312%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C128%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2312%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#12}::{constant#0}&gt; for FixedBytes&lt;128&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#12}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2313%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C256%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2313%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C256%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#13}::{constant#0}&gt; for FixedBytes&lt;256&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#13}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2314%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C512%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2314%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C512%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#14}::{constant#0}&gt; for FixedBytes&lt;512&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#14}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2315%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C1024%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%2315%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C1024%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#15}::{constant#0}&gt; for FixedBytes&lt;1024&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#15}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%233%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C0%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%233%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C0%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#3}::{constant#0}&gt; for FixedBytes&lt;0&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#3}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%234%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C1%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%234%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#4}::{constant#0}&gt; for FixedBytes&lt;1&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#4}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%235%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C2%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%235%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#5}::{constant#0}&gt; for FixedBytes&lt;2&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#5}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%236%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C4%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%236%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#6}::{constant#0}&gt; for FixedBytes&lt;4&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#6}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%237%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C8%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%237%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#7}::{constant#0}&gt; for FixedBytes&lt;8&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#7}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%238%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C16%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%238%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#8}::{constant#0}&gt; for FixedBytes&lt;16&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#8}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%239%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C20%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen%3Calloy_primitives::::bits::rlp::%7Bimpl%239%7D::%7Bconstant%230%7D%3E-for-FixedBytes%3C20%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen&lt;alloy_primitives::::bits::rlp::{impl#9}::{constant#0}&gt; for FixedBytes&lt;20&gt;</h3></section>","MaxEncodedLen<alloy_primitives::::bits::rlp::{impl#9}::{constant#0}>","alloy_eips::eip4844::Blob"],["<section id=\"impl-StructuralPartialEq-for-FixedBytes%3CN%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-FixedBytes%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for FixedBytes&lt;N&gt;</h3></section>","StructuralPartialEq","alloy_eips::eip4844::Blob","alloy_eips::eip4844::Bytes48"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()